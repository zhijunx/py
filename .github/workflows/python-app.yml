# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        if [ -f "test_wechat_sender.py" ]; then
          pytest
        else
          echo "No test file found, skipping tests"
        fi
    # - name: Create config template
    #   run: |
    #     cp config.yaml.example config.yaml || echo "No config template found"
    - name: Run basic syntax check
      run: |
        python -m py_compile demo_wechat4b/wechat_sender.py
        echo "Syntax check passed"

    - name: Archive code
      uses: actions/upload-artifact@v4
      with:
        name: python-code
        path: |
          *.py
          *.yaml
          *.yml
        retention-days: 30